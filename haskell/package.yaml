name: onyxite-customs-tool
version: '20190702'
github: mtolly/onyxite-customs
author: Michael Tolly <miketolly@gmail.com>
category: Distribution
license: GPL-3
license-file: LICENSE.txt

extra-source-files:
- vendors/KV.bin
- vendors/rb3.png
- vendors/empty.milo_xbox
- vendors/empty-rb2.milo_xbox
- vendors/empty-rb2_weights.bin
- vendors/missing_song_data.dta
- vendors/rockband_drums.png
- vendors/rockband_guitarbass.png
- vendors/rockband_ghl.png
- ../player/www/index.html
- ../player/www/style.css
- ../player/www/app.min.js
- ../player/www/customize.js
- ../player/www/VarelaRound-Regular.ttf
- ../player/www/images/*.png
- cbits/*.h
- icon/icon.*

ghc-options: -Wall

library:

  source-dirs: src
  dependencies:
  - base
  - shake
  - hashable
  - directory
  - temporary
  - aeson
  - text
  - unordered-containers
  - filepath
  - yaml
  - file-embed
  - event-list
  - non-negative
  - midi
  - hmidi
  - containers
  - bytestring
  - process
  - resourcet
  - hsndfile
  - JuicyPixels
  - conduit
  - vector
  - transformers
  - mtl
  - extra
  - pureMD5
  - binary
  - array
  - base64-bytestring
  - pretty
  - monad-loops
  - time
  - ini
  - executable-path
  - split
  - data-default-class
  - utility-ht
  - scientific
  - template-haskell
  - MonadRandom
  - data-binary-ieee754
  - zip-archive
  - silently
  - codec
  - deepseq
  - process-extras
  - path
  - path-io
  - exceptions
  - stm
  - async
  - req
  - profunctors
  - cryptonite
  - memory
  - unliftio-core
  - xml
  - zlib
  # my libraries
  - jammittools
  - midi-util
  - conduit-audio
  - conduit-audio-sndfile
  - conduit-audio-samplerate
  - conduit-audio-lame
  - conduit-audio-mpg123
  - rubberband
  - JuicyPixels-stbir
  - ArkTool

  ghc-options: -O
  build-tools:
  - c2hs >= 0.27.1
  - alex
  - happy

  include-dirs:
  - cbits/
  c-sources:
  - cbits/stb_dxt.c
  - cbits/encode_vag.c
  extra-libraries:
  - stdc++

  when:
  - condition: os(mingw32)
    then:
      extra-libraries: shell32
      cpp-options: -DWINDOWS
      c-sources: cbits/winfiles.c
      dependencies: Win32
    else:
      dependencies: mountpoints
  - condition: os(darwin)
    cpp-options: -DMACOSX
    c-sources: cbits/macfiles.m
    frameworks: AppKit

executables:

  onyx:
    source-dirs: src-exe
    main: Main.hs

    dependencies:
    - base
    - directory
    - aeson
    - text
    - bytestring
    - unordered-containers
    - filepath
    - yaml
    - process
    - resourcet
    - hsndfile
    - transformers
    - data-default-class
    - stm
    - req
    - fltkhs
    - midi
    # my libraries
    - midi-util
    # the lib in this package
    - onyxite-customs-tool

    ghc-options: -threaded -O

    when:
    - condition: os(mingw32)
      then:
        cpp-options: -DWINDOWS
        ld-options: icon/icon.o -mwindows
        dependencies: Win32
      else:
        dependencies: mountpoints
    - condition: os(darwin)
      then:
        cpp-options: -DMACOSX
        ld-options: -lto_library
        # ^ this fixes C++ exception catching on mac.
        # see https://ghc.haskell.org/trac/ghc/ticket/11829
        extra-libraries:
        - fltkc # TODO breaks ghci
      else:
        # copied from fltkhs-hello-world
        ghc-options: '-pgml g++ "-optl-Wl,--allow-multiple-definition" "-optl-Wl,--whole-archive" "-optl-Wl,-Bstatic" "-optl-Wl,-lfltkc" "-optl-Wl,-Bdynamic" "-optl-Wl,--no-whole-archive"'

  onyx-package:
    main: Installer.hs
    dependencies: [base, nsis, text]
